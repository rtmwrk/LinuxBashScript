#!/bin/bash

#--------------------------------------------------------------
# get_use_space: скрипт выводит данные по занятому пространству
#                домашними каталогами локальных пользователей
#--------------------------------------------------------------

#--------------------------------------------------------------
# Константы:
# @userId - 1-й id не системного пользователя данной системы
#--------------------------------------------------------------

# --- Инициализируем константы ---
userId=$(( 1000 - 1 ))

# --- Функция обработки ошибок ---
function printError {
  echo "[$(date)] Ошибка! Работа скрипта аварийно прервана"
  exit -1
}

# --- Выводим баннер скрипта ---
echo "---------------------------------------------------------------"
echo "get_use_space.sh - вывод  данных по объему пространств, занятых"
echo "                   домашними каталогами локальных пользователей"
echo "---------------------------------------------------------------"

# --- Выводим сообщение о начале работы скрипта ---
echo "[$(date)] Анализ домашних каталогов пользователей начат:"
# --- Выводим заголовок таблицы ---
printf "%-15s" "  User name"
printf "\t%-12s\n" "  Use space"
printf "%-15s" "--------------"
printf "\t%12s\n" "------------"

# --- В цикле получаем данные о занятом пространства каталогами локальных пользователей ---
for name in $(cut -d: -f1,3,6 /etc/passwd | awk -F ':' '$2 > 999 {print $0}')
do
  # --- Считаем объем занятого пространства для пользователя ---
  attrArray=($(echo $name | tr ":" "\n"))
  if [[ "${attrArray[0]}" != "nobody" ]] ; then
    # --- Проходим по всем локальным пользователям, кроме nobody ---
    printf "%-15s" ${attrArray[0]}
    du -s ${attrArray[2]} | awk '{printf("\t%10.1fMb\n", $1 / 1024)}' || printError
  fi
done

# --- Выводим сообщение о завершении работы скрипта ---
echo "[$(date)] Анализ завершен"

# --- Формируем код возврата "Ок" ---
exit 0